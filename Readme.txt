Readme@2016/05/05
采用GBK编码

一、测试
测试时可在Test类的run方法中(Test.java的第23行开始)中使用system对象的几个方法，分别如下：
1)addRequest(int x1, int y1, int x2, int y2) 用来添加请求，(x1,y1)为请求起始点，(x2,y2)为请求目的点，x1,y1,x2,y2均为1-80间的整数。
2)getTaxiInfo(int i) 用于获取对应编号出租车的当前信息，i为0-99间整数，但是获取时会给i+1,于是实际获取的是1-100号出租车的信息。
3)openRoad(int x1, int y1, int x2, int y2) 用来打开(x1,y1)到(x2,y2)的道路，需注意的是原来地图上不存在的道路无法打开，若打开失败会报错。
4)closeRoad(int x1, int y1, int x2, int y2) 用来关闭(x1,y1)到(x2,y2)的道路，需注意的是流量不为0的道路无法关闭，若关闭失败会报错。

测试时可交替重复使用这几种方法，另外，可以使用sleep方法休眠一段时间，达到不同时刻的目的。另外，输入请求尽量不要大于300条（担心占用内存过大）。下面是一个测试样例：
system.addRequest(4, 4, 70, 70);
system.closeRoad(16, 31, 16, 32);
system.closeRoad(15, 32, 16, 32);
sleep(100);
system.addRequest(16, 32, 63, 42);
system.openRoad(16, 31, 16, 32);
sleep(100);
system.addRequest(16, 32, 63, 42);
//下面三行代码用于输出此时刻所有出租车的信息
for (int i = 0; i <= 100; i++) {
	system.getTaxiInfo(i);
}

二、关于地图
1)程序默认地图路径是"D:\\map.txt",若需修改，请在Map.java中的第78行修改引号内文件路径。地图格式是80*80的矩阵，中间有无空格均可。
2)输入地图若是非连通图会报错，若输入地图不满足其他要求也会报错，程序直接结束。
3)程序默认路口情况路径是"D:\\across.txt",若需修改，请在Map.java中第107行修改引号内文件路径。

三、输出
程序采取控制台输出。
a)系统在分配请求时，会把分配到的出租车和相应请求打印出来。
b)出租车在到达请求起始位置时，会打印一次。
c)出租车在把乘客送到时，会打印一次。
d)由于出租车处于等待服务状态的运动是随机的，所以有时候请求无车响应也是正常情况，可以多运行几次试试。
e)出租车在接客和送客时会实时打印自身的位置，并输出每个路口是否需要等待。

感谢辛苦测试！